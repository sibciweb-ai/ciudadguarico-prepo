generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}

model Seccion {
  id       Int       @id @default(autoincrement())
  nombre   String    @unique
  noticias Noticia[]
}

model Rol {
  id           Int          @id @default(autoincrement())
  nombre       String       @unique
  usuarioRoles UsuarioRol[]
}

model Usuario {
  id           Int          @id @default(autoincrement())
  username     String       @unique
  password     String
  createdAt    DateTime     @default(now())
  usuarioRoles UsuarioRol[]
}

model UsuarioRol {
  usuarioId Int
  rolId     Int
  usuario   Usuario @relation(fields: [usuarioId], references: [id])
  rol       Rol     @relation(fields: [rolId], references: [id])

  @@id([usuarioId, rolId])
}

model Columnista {
  id        Int       @id @default(autoincrement())
  nombre    String
  bio       String
  fotoUrl   String?
  redes     Json?
  opiniones Opinion[]
  createdAt DateTime  @default(now())
}

model Editorial {
  id        Int      @id @default(autoincrement())
  titulo    String
  contenido String
  fecha     DateTime @default(now())
  autor     String?
  media     Media[]  @relation("EditorialMedia")
}

model Opinion {
  id           Int        @id @default(autoincrement())
  titulo       String
  contenido    String
  fecha        DateTime   @default(now())
  columnista   Columnista @relation(fields: [columnistaId], references: [id])
  columnistaId Int
  media        Media[]    @relation("OpinionMedia")
  destacado    Boolean    @default(false)
}

model Media {
  id           Int            @id @default(autoincrement())
  url          String
  tipo         MediaTipo
  descripcion  String?
  noticiaMedia NoticiaMedia[]
  editorialId  Int?
  editorial    Editorial?     @relation("EditorialMedia", fields: [editorialId], references: [id])
  opinionId    Int?
  opinion      Opinion?       @relation("OpinionMedia", fields: [opinionId], references: [id])
}

enum MediaTipo {
  imagen
  video
  pdf
}

model Noticia {
  id               Int            @id @default(autoincrement())
  titulo           String
  contenido        String
  resumen          String
  autorTexto       String
  autorFoto        String
  destacada        Boolean        @default(false)
  fechaPublicacion DateTime       @default(now())
  createdAt        DateTime       @default(now())
  updatedAt        DateTime       @updatedAt
  seccionId        Int?
  seccion          Seccion?       @relation(fields: [seccionId], references: [id])
  noticiaMedia     NoticiaMedia[]
}

model NoticiaMedia {
  noticiaId Int
  mediaId   Int
  noticia   Noticia @relation(fields: [noticiaId], references: [id])
  media     Media   @relation(fields: [mediaId], references: [id])

  @@id([noticiaId, mediaId])
}

model PDF {
  id          Int      @id @default(autoincrement())
  url         String
  fecha       DateTime
  descripcion String?
}

model View {
  id            Int      @id @default(autoincrement())
  nombre        String
  descripcion   String?
  tipo          String
  configuracion Json
  activo        Boolean  @default(true)
  createdAt     DateTime @default(now())
  updatedAt     DateTime @updatedAt
}

model ContenidoDestacado {
  id          Int       @id @default(autoincrement())
  media       String
  url         String?
  fechaInicio DateTime?
  fechaFin    DateTime?
  titulo      String?
  ubicacion   String
  visible     Boolean   @default(true)
}
