services:
  db:
    image: postgres:16-alpine
    container_name: cg_postgres
    environment:
      POSTGRES_USER: cg_user
      POSTGRES_PASSWORD: cg_password
      POSTGRES_DB: cg_database
    ports:
      - "5432:5432"
    volumes:
      - pgdata:/var/lib/postgresql/data
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -U cg_user -d cg_database"]
      interval: 5s
      timeout: 5s
      retries: 10
    restart: unless-stopped
    networks:
      - cg_network

  pgadmin:
    image: dpage/pgadmin4:latest
    container_name: cg_pgadmin
    environment:
      PGADMIN_DEFAULT_EMAIL: admin@ciudadguarico.com
      PGADMIN_DEFAULT_PASSWORD: ciudad2025
      PGADMIN_LISTEN_ADDRESS: 0.0.0.0
      PGADMIN_LISTEN_PORT: 80
    depends_on:
      - db
    volumes:
      - pgadmin_data:/var/lib/pgadmin
    restart: unless-stopped
    networks:
      - cg_network

  backend:
    build:
      context: ./backend
      dockerfile: Dockerfile
    container_name: cg_backend
    environment:
      NODE_ENV: production
      PORT: 3000
      DATABASE_URL: postgresql://cg_user:cg_password@db:5432/cg_database?schema=public
      ALLOWED_ORIGINS: http://localhost,http://localhost:80,http://localhost:5173,http://localhost:8080,http://ciudadguarico.com,https://ciudadguarico.com,http://149.50.138.208,https://149.50.138.208
    depends_on:
      db:
        condition: service_healthy
    volumes:
      - backend_uploads:/app/uploads
    restart: unless-stopped
    mem_limit: 512m
    mem_reservation: 256m
    networks:
      - cg_network

  frontend:
    build:
      context: ./frontend
      dockerfile: Dockerfile
    container_name: cg_frontend
    depends_on:
      - backend
    restart: unless-stopped
    networks:
      - cg_network

  # Nginx como reverse proxy
  reverse-proxy:
    image: nginx:1.27-alpine
    container_name: cg_reverse_proxy
    ports:
      - "8080:80"    # Puerto 8080 para no interferir con el 80 actual
      - "8081:8080"  # pgAdmin en 8081
    volumes:
      - /home/gsevilla/nginx-docker/nginx.conf:/etc/nginx/nginx.conf:ro
    depends_on:
      - frontend
      - backend
      - pgadmin
    restart: unless-stopped
    networks:
      - cg_network

networks:
  cg_network:
    driver: bridge

volumes:
  pgdata:
  pgadmin_data:
  backend_uploads:
