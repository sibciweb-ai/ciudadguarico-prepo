services:
  db:
    image: postgres:16-alpine
    container_name: cg_postgres
    environment:
      POSTGRES_USER: cg_user
      POSTGRES_PASSWORD: cg_password
      POSTGRES_DB: cg_database
    ports:
      - "5432:5432"
    volumes:
      - pgdata:/var/lib/postgresql/data
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -U cg_user -d cg_database"]
      interval: 5s
      timeout: 5s
      retries: 10
    restart: unless-stopped

  backend:
    build:
      context: ./backend
      dockerfile: Dockerfile
    container_name: cg_backend
    environment:
      NODE_ENV: production
      PORT: 3000
      DATABASE_URL: postgresql://cg_user:cg_password@db:5432/cg_database?schema=public
      ALLOWED_ORIGINS: http://localhost,http://localhost:80,http://localhost:5173,http://localhost:8080,http://ciudadguarico.com,https://ciudadguarico.com,http://149.50.138.208,https://149.50.138.208
    depends_on:
      db:
        condition: service_healthy
    ports:
      - "3000:3000"
    volumes:
      - backend_uploads:/app/uploads
    restart: unless-stopped
    mem_limit: 512m
    mem_reservation: 256m

  frontend:
    build:
      context: ./frontend
      dockerfile: Dockerfile
    container_name: cg_frontend
    depends_on:
      - backend
    ports:
      - "80:80"
    restart: unless-stopped

volumes:
  pgdata:
  backend_uploads:
